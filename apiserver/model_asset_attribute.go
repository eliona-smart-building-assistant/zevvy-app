/*
 * App template API
 *
 * API to access and configure the app template
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package apiserver

import (
	"time"
)

// AssetAttribute - Specify asset attribute for reporting data to Zevvy.
type AssetAttribute struct {

	// Config ID
	ConfigId int32 `json:"configId,omitempty"`

	// Eliona asset ID
	AssetId int32 `json:"assetId"`

	// Asset attribute subtype
	Subtype string `json:"subtype"`

	// Asset attribute name
	AttributeName string `json:"attributeName"`

	// Latest timestamp of data sent to Zevvy
	LatestTimestamp *time.Time `json:"latestTimestamp,omitempty"`

	// The device reference in Zevvy (default device reference is asset's GAI)
	DeviceReference *string `json:"deviceReference,omitempty"`

	// The register reference in Zevvy (default register reference is the attribute name)
	RegisterReference *string `json:"registerReference,omitempty"`
}

// AssertAssetAttributeRequired checks if the required fields are not zero-ed
func AssertAssetAttributeRequired(obj AssetAttribute) error {
	elements := map[string]interface{}{
		"assetId":       obj.AssetId,
		"subtype":       obj.Subtype,
		"attributeName": obj.AttributeName,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertAssetAttributeConstraints checks if the values respects the defined constraints
func AssertAssetAttributeConstraints(obj AssetAttribute) error {
	return nil
}
